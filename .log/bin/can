#!/root/Datalogger_Scripts/.log/bin/python3

import sys
import os
import optparse
import logging

from libcan import init_logging, text_decode, __version__, __copyright__
from libcan.filter import COMPRESS_NONE, COMPRESS_GZIP, COMPRESS_GZIP_ALL, COMPRESS_BZIP2, COMPRESS_BZIP2_ALL
from libcan.actions import Actions


def show_version(*_):
    print "can %s, %s." % (__version__, __copyright__)
    print "can is distributed under the terms of the GNU General Public License."
    sys.exit(0)


parser = optparse.OptionParser()

parser.add_option("--version",
                  action="callback", callback=show_version,
                  help="display version and license information and exit")

parser.add_option("-v", "--verbose",
                  action="count", dest="verbose", default=0,
                  help="produce informative runtime output")

parser.add_option("-c", "--create",
                  action="store_const", const="create", dest="action",
                  help="create a new backup snapshot")
parser.add_option("-x", "--extract",
                  action="store_const", const="extract", dest="action",
                  help="extract files from a backup snapshot")
parser.add_option("-t", "--list",
                  action="store_const", const="list", dest="action",
                  help="list files in a backup snapshot")
parser.add_option("--test",
                  action="store_const", const="test", dest="action",
                  help="test the integrity of a backup snapshot")


parser.add_option("-C", "--directory",
                  action="store", type="string", dest="directory", default=os.getcwd(),
                  help="change to DIRECTORY before adding or extracting files")
parser.add_option("-f", "--file",
                  action="store", type="string", dest="source",
                  help="--create the snapshot named SOURCE or --extract files from snapshot SOURCE")
parser.add_option("-T", "--files-from",
                  action="store", type="string", dest="filesfrom", default=None, metavar="FILE",
                  help="read filenames one per line from file FILENAME instead from the filesystem, " \
                       "\"-\" means standard input")

parser.add_option("-e", "--exclude",
                  action="append", type="string", dest="excludes", metavar="PATTERN",
                  help="exclude shell pattern PATTERN from snapshot")
parser.add_option("-X", "--exclude-from",
                  action="store", type="string", dest="excludefrom", metavar="FILE",
                  help="read exclude patterns from file FILE, one per line")
parser.add_option("--exclude-tag",
                  action="store", type="string", metavar="FILE", default=None,
                  help="exclude contents of directories containing FILE, except for FILE itself")
parser.add_option("-M", "--max-size",
                  action="store", type="int", dest="max_size", metavar="SIZE",
                  help="maximum size in megabytes for files to add to a snapshot")

parser.add_option("-l", "--one-file-system",
                  action="store_true", dest="one_file_system", default=False,
                  help="do not descend into other mounted filesystems")

parser.add_option("-z", "--gzip",
                  action="store_const", const=COMPRESS_GZIP, dest="compression", default=COMPRESS_NONE,
                  help="compress compressable files in the snapshot with gzip")
parser.add_option("-Z", "--gzip-all",
                  action="store_const", const=COMPRESS_GZIP_ALL, dest="compression",
                  help="compress complete backup snapshot with gzip")
parser.add_option("-j", "--bzip2",
                  action="store_const", const=COMPRESS_BZIP2, dest="compression",
                  help="compress compressable files in the snapshot with bzip2")
parser.add_option("-J", "--bzip2-all",
                  action="store_const", const=COMPRESS_BZIP2_ALL, dest="compression",
                  help="compress complete backup snapshot with bzip2")
parser.add_option("-K", "--keyfile",
                  action="store", dest="keyfile", metavar="FILE",
                  help="encrypt the entire snapshot using the blowfish algorithm and keyfile FILE")

parser.add_option("--new",
                  action="store_true", dest="list_new", default=False,
                  help="list only new or changed files in a snapshot with -t/--list")

opts, args = parser.parse_args()

if opts.action is None:
    parser.error("use -h/--help for more information")

if opts.action in ("extract", "list") and not opts.source:
    parser.error("you must specify the filename of a snapshot with -f/--file")

opts.directory = os.path.abspath(opts.directory)

if opts.max_size is not None:
    opts.max_size *= 1024 ** 2

if opts.keyfile is not None and not os.path.exists(opts.keyfile):
    raise SystemExit("-K/--keyfile %s does not exist" % opts.keyfile)

init_logging(opts.verbose)

try:
    args = [text_decode(a) for a in args]
except UnicodeError, e:
    raise SystemExit(e)

try:
    actions = Actions(opts, args)
    getattr(actions, opts.action)()
except KeyboardInterrupt:
    sys.stderr.write("user interrupt!\n")

